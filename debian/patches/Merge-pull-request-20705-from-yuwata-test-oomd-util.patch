From: Luca Boccassi <luca.boccassi@microsoft.com>
Date: Sun, 12 Sep 2021 12:56:46 +0100
Subject: Merge pull request #20705 from yuwata/test-oomd-util

test: skip oomd test on a unified container on a hybrid host
---
 src/basic/cgroup-util.c    | 18 +++++-------------
 src/nspawn/nspawn-cgroup.c |  2 +-
 src/shared/mount-setup.c   |  2 +-
 5 files changed, 21 insertions(+), 15 deletions(-)

diff --git a/src/basic/cgroup-util.c b/src/basic/cgroup-util.c
index 1ff6160..d412e23 100644
--- a/src/basic/cgroup-util.c
+++ b/src/basic/cgroup-util.c
@@ -1952,7 +1952,7 @@ int cg_mask_supported(CGroupMask *ret) {
 }
 
 int cg_kernel_controllers(Set **ret) {
-        _cleanup_set_free_free_ Set *controllers = NULL;
+        _cleanup_set_free_ Set *controllers = NULL;
         _cleanup_fclose_ FILE *f = NULL;
         int r;
 
@@ -1962,10 +1962,6 @@ int cg_kernel_controllers(Set **ret) {
          * and controllers that aren't currently accessible (because not mounted). This does not include "name="
          * pseudo-controllers. */
 
-        controllers = set_new(&string_hash_ops);
-        if (!controllers)
-                return -ENOMEM;
-
         r = fopen_unlocked("/proc/cgroups", "re", &f);
         if (r == -ENOENT) {
                 *ret = NULL;
@@ -1978,7 +1974,7 @@ int cg_kernel_controllers(Set **ret) {
         (void) read_line(f, SIZE_MAX, NULL);
 
         for (;;) {
-                char *controller;
+                _cleanup_free_ char *controller = NULL;
                 int enabled = 0;
 
                 errno = 0;
@@ -1993,17 +1989,13 @@ int cg_kernel_controllers(Set **ret) {
                         return -EBADMSG;
                 }
 
-                if (!enabled) {
-                        free(controller);
+                if (!enabled)
                         continue;
-                }
 
-                if (!cg_controller_is_valid(controller)) {
-                        free(controller);
+                if (!cg_controller_is_valid(controller))
                         return -EBADMSG;
-                }
 
-                r = set_consume(controllers, controller);
+                r = set_ensure_consume(&controllers, &string_hash_ops_free, TAKE_PTR(controller));
                 if (r < 0)
                         return r;
         }
diff --git a/src/nspawn/nspawn-cgroup.c b/src/nspawn/nspawn-cgroup.c
index cb01b25..d472e80 100644
--- a/src/nspawn/nspawn-cgroup.c
+++ b/src/nspawn/nspawn-cgroup.c
@@ -406,7 +406,7 @@ static int mount_legacy_cgns_unsupported(
                 uid_t uid_range,
                 const char *selinux_apifs_context) {
 
-        _cleanup_set_free_free_ Set *controllers = NULL;
+        _cleanup_set_free_ Set *controllers = NULL;
         const char *cgroup_root;
         int r;
 
diff --git a/src/shared/mount-setup.c b/src/shared/mount-setup.c
index ebea7a2..ab40447 100644
--- a/src/shared/mount-setup.c
+++ b/src/shared/mount-setup.c
@@ -294,7 +294,7 @@ static int symlink_controller(const char *target, const char *alias) {
 }
 
 int mount_cgroup_controllers(void) {
-        _cleanup_set_free_free_ Set *controllers = NULL;
+        _cleanup_set_free_ Set *controllers = NULL;
         int r;
 
         if (!cg_is_legacy_wanted())
